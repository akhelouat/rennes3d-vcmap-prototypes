export enum LOG_LEVEL {
    OFF = 1,
    ERROR = 2,
    WARN = 4,
    INFO = 8,
    DEBUG = 16,
}

export class Logger {
    constructor(className?: string);
    className: string;
    deprecations: Map<string, string|null>;
    error(msg: string, ...optArgs: any):void;
    warning(msg: string, ...optArgs: any):void;
    deprecate(functionName: string, alternativeFunctionName?: string):void;
    info(msg: string, ...optArgs: any):void;
    debug(msg: string, ...optArgs: any):void;
    log(msg: string, ...optArgs: any):void;
}

export interface Settings {
    logLevel: LOG_LEVEL;
    useTimestamp: false,
}

export function setLogLevel(level: string|LOG_LEVEL|boolean):void;

export function getLogger(className?: string): Logger;

export const loggers: Map<string, Logger>;
