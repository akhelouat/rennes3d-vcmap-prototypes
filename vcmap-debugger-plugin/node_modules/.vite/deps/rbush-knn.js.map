{
  "version": 3,
  "sources": ["../../tinyqueue/index.js", "../../rbush-knn/index.js", "dep:rbush-knn"],
  "sourcesContent": ["\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n", "'use strict';\n\nvar Queue = require('tinyqueue');\n\nmodule.exports = knn;\nmodule.exports.default = knn;\n\nfunction knn(tree, x, y, n, predicate, maxDistance) {\n    var node = tree.data,\n        result = [],\n        toBBox = tree.toBBox,\n        i, child, dist, candidate;\n\n    var queue = new Queue(undefined, compareDist);\n\n    while (node) {\n        for (i = 0; i < node.children.length; i++) {\n            child = node.children[i];\n            dist = boxDist(x, y, node.leaf ? toBBox(child) : child);\n            if (!maxDistance || dist <= maxDistance * maxDistance) {\n                queue.push({\n                    node: child,\n                    isItem: node.leaf,\n                    dist: dist\n                });\n            }\n        }\n\n        while (queue.length && queue.peek().isItem) {\n            candidate = queue.pop().node;\n            if (!predicate || predicate(candidate))\n                result.push(candidate);\n            if (n && result.length === n) return result;\n        }\n\n        node = queue.pop();\n        if (node) node = node.node;\n    }\n\n    return result;\n}\n\nfunction compareDist(a, b) {\n    return a.dist - b.dist;\n}\n\nfunction boxDist(x, y, box) {\n    var dx = axisDist(x, box.minX, box.maxX),\n        dy = axisDist(y, box.minY, box.maxY);\n    return dx * dx + dy * dy;\n}\n\nfunction axisDist(k, min, max) {\n    return k < min ? min - k : k <= max ? 0 : k - max;\n}\n", "export default require(\"./node_modules/rbush-knn/index.js\");"],
  "mappings": "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",
  "names": []
}
